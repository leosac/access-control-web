# The Dockerfile that will create the leosac-web image

# Download base image
FROM debian:bullseye

# Update Software repository
RUN apt-get update

# Install sudo & git
RUN apt-get install wget git curl -y

# Set the username and the email adress of the git profil
RUN git config --global user.name myname
RUN git config --global user.email myadress@mydomain.com

# Install node
RUN (curl -sL https://deb.nodesource.com/setup_16.x | bash -)
RUN apt-get update
RUN apt-get install -y nodejs

# Install yarn and ember-cli
RUN npm install yarn ember-cli -g

# Create a Leosac repository
RUN mkdir -p /leosac

# Copy leosac-web and leosac-web-addons in the images
# Leosac-web and leosac-web-addons should have been cloned and placed in a file name leosac.
ADD ../../leosac/ /leosac/.

# Run npm install. This will help us gain a lot of time in our container

RUN (cd /leosac/leosac-web && yarn install)

# Add the scrypt.py to the images
COPY leosac/leosac-web/web-service/script.py script.py

# When launching a container, this will execut a python script in which the package.json will be created
CMD ["usr/bin/python3", "script.py"]


# We move our template/placeholder files so that they replace the normal app.js/router.js etc.
# This will allow our entrypoint/build script to replace content with its generated content.

RUN mv /leosac/leosac-web/app/app-docker-template.js /leosac/leosac-web/app/app.js
RUN mv /leosac/leosac-web/app/router-docker-template.js /leosac/leosac-web/app/router.js
RUN mv /leosac/leosac-web/config/environment-docker-template.js /leosac/leosac-web/config/environment.js


VOLUME /custom-assets
VOLUME /build-config.json
VOLUME /build-output
